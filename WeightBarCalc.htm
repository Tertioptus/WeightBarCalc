<!DOCTYPE html>
<html>
<head>
<title>Weight Bar Calc</title>
</head>
<body>
<script>
	var platePairs = [2.5,5,5,10,25,35,45];
	var bar = 45;
	var printed = [];
	function platePairAggregator(platePairs) {
		let platePairSum = bar;
		function add(value) {
			platePairSum += value*2;
		}
		platePairs.forEach(add);
		return platePairSum;
	}
	function possibleFieldGenerator(platePairSum) {
		//create all the numbers from 45 to plate pair sum
		let field = [];
		for (weight=bar; weight<=platePairSum; weight+=5) {
			field.push(weight);
		}
		return field;
	}
	function printRack(rack) {
		function printWeight(val) {
			let value = (9 * Math.sqrt(val))/5;
			let r = value * 8;
			let stroke_width = 5;
			let cx = value * 10;
			let cy = value * 10;
			let height = value * 20;
			let width = value * 20;	
			document.write('<svg height="'+ height +'" width="' + width + '">');
			document.write('<circle cx="' + cx +'" cy="' + cy + '" r="' + r + '" stroke="black" stroke-width="' + stroke_width + '" fill="#EEEEEE" />');
			document.write('<text x="50%" y="50%" text-anchor="middle" font-size="20px" stroke="black" stroke-width="2px" dy=".3em">' + val + '</text>');					
			document.write('</svg>');
		}				
		document.write('<div  style="border-style:solid; margin: 2px 0px 2px 0px;background-color:white">');
		rack.forEach(printWeight);	
		document.write('</div>');
	}
	function weightSetter(weightRequest) {
		//consider base weight and then all combinations of children, plus bar until match is found
		for(let i=0;i<weightRequest.platePairs.length;i++) {
			let selectedPlate = weightRequest.platePairs[i];
			if(selectedPlate<=0 || (weightRequest.rack.length > 0 && selectedPlate <  weightRequest.rack[weightRequest.rack.length-1])) continue;
			let rack = [...weightRequest.rack];
			rack.push(selectedPlate);
			let total = platePairAggregator(rack);
			let weight = weightRequest.weight;
			if(total == weight) {
				if(!printed[rack]) {
					printed[rack] = true;
					printRack(rack);
				}
				break;
			}
			if(total < weight) {
				let platePairSubset =  [...weightRequest.platePairs];
				platePairSubset[i] = -1;
				let weightRequestSubset =
				{
					weight: weight,
					platePairs: platePairSubset,
					rack: rack
				}
				weightSetter(weightRequestSubset);
			}
			if(total > weight) break;
		}	
	}
	function requestManager(weight) {
		if(weight > bar) {
			//Create weight request	
			let weightRequest = {weight: weight, platePairs: platePairs, rack: []};
			document.write('<div style="border-style:solid; margin: 2px 0px 2px 0px; padding: 2px 1px 2px 1px;background-color:#CCCCCC">');
			document.write('<div>For weight:' + weight + ' , low:' + Math.round(weight * 1.16) + ' , high:' + Math.round(weight * 1.25) + '</div>');
			weightSetter(weightRequest);
		document.write('</div>');
		}
	}
	function userListener(possibleFieldBase5) {
		//For each weight in the field, create a weight request for a RequestManageer
		possibleFieldBase5.forEach(requestManager);
	}
	function appStart() {
		userListener(possibleFieldGenerator(platePairAggregator(platePairs)));
	}
	appStart();
</script>
</body>
</html>
